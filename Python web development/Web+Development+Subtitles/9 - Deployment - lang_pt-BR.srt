1
00:00:00,524 --> 00:00:03,339
Até agora, desenvolvemos
o aplicativo web

2
00:00:03,372 --> 00:00:06,516
na sala de aula
ou no computador local.

3
00:00:07,165 --> 00:00:10,796
No entanto, só compartilharemos
o aplicativo com outra pessoa

4
00:00:10,829 --> 00:00:12,621
depois de transferirmos
os arquivos

5
00:00:12,654 --> 00:00:14,294
para o computador dela

6
00:00:14,327 --> 00:00:19,541
e de ela configurar um ambiente
Python no computador local dela.

7
00:00:19,574 --> 00:00:22,550
É hora de implantar o aplicativo
em um servidor externo

8
00:00:22,583 --> 00:00:26,341
com um endereço web que todos possam
acessar para ver o trabalho.

9
00:00:26,374 --> 00:00:29,325
Existem muitas empresas
que fornecem servidores web

10
00:00:29,358 --> 00:00:30,948
para implantar um aplicativo.

11
00:00:30,981 --> 00:00:33,563
Neste vídeo,
escolhi usar o Heroku,

12
00:00:33,596 --> 00:00:37,149
que é considerado
uma plataforma de serviço.

13
00:00:37,182 --> 00:00:40,446
Na minha opinião,
é uma das plataformas mais fáceis

14
00:00:40,479 --> 00:00:43,134
e não exige muita configuração.

15
00:00:43,167 --> 00:00:46,635
Há também um nível gratuito
que não expira.

16
00:00:46,668 --> 00:00:49,287
Se for um pequeno
aplicativo web, como este,

17
00:00:49,320 --> 00:00:51,156
que não tem banco de dados,

18
00:00:51,189 --> 00:00:54,348
o Heroku funcionará
para as necessidades.

19
00:00:54,381 --> 00:00:59,070
Mostrarei como colocar
o aplicativo no Heroku.

20
00:00:59,103 --> 00:01:02,383
Faremos isso da sala de aula
do espaço de trabalho do Linux.

21
00:01:02,416 --> 00:01:05,287
Também fornecerei uma lista -
abaixo do vídeo -

22
00:01:05,320 --> 00:01:09,534
de outros serviços que podemos usar
para implantar o aplicativo da web.

23
00:01:09,567 --> 00:01:12,699
Este é o nosso aplicativo web.

24
00:01:12,732 --> 00:01:17,323
Todas as pastas e arquivos estão
na coluna à esquerda.

25
00:01:17,356 --> 00:01:20,976
O primeiro passo será criar
uma nova pasta

26
00:01:21,009 --> 00:01:24,733
e colocar todos os arquivos
nela.

27
00:01:24,766 --> 00:01:26,403
Farei isso no terminal,

28
00:01:26,436 --> 00:01:29,053
mas podemos fazer
usando o sinal de mais

29
00:01:29,086 --> 00:01:33,082
ou clicando com o botão direito
nestas pastas e arquivos.

30
00:01:33,115 --> 00:01:34,956
Abro um novo terminal

31
00:01:34,989 --> 00:01:36,834
e digito:

32
00:01:36,867 --> 00:01:40,016
faça um diretório chamado
"web_app".

33
00:01:40,049 --> 00:01:45,449
Movemos todas as pastas e arquivos
para essa nova pasta web_app.

34
00:01:45,482 --> 00:01:47,577
O "mv" quer dizer "mover",

35
00:01:47,610 --> 00:01:52,985
"-t" diz que estou especificando
o novo diretório para o qual

36
00:01:53,018 --> 00:01:55,380
os arquivos e pastas

37
00:01:55,413 --> 00:01:59,716
serão movidos, ou seja,
para a pasta web_app.

38
00:02:00,846 --> 00:02:04,097
Parece que escrevi
"worldbankapp" errado.

39
00:02:04,130 --> 00:02:06,753
Vamos consertar isso.

40
00:02:06,786 --> 00:02:11,170
Tudo foi movido
para a nova pasta.

41
00:02:11,203 --> 00:02:15,042
Para instalar
este aplicativo web,

42
00:02:15,075 --> 00:02:19,283
teremos que especificar
as bibliotecas Python necessárias.

43
00:02:19,316 --> 00:02:20,816
Neste espaço de trabalho -

44
00:02:20,849 --> 00:02:23,015
e provavelmente
no seu computador também -

45
00:02:23,048 --> 00:02:26,514
existem muitas bibliotecas
Python extras instaladas

46
00:02:26,547 --> 00:02:29,795
que não são necessárias
para o aplicativo web.

47
00:02:29,828 --> 00:02:33,777
Lidamos com isso criando
um ambiente virtual

48
00:02:33,810 --> 00:02:38,722
e instalando as bibliotecas Python
necessárias para o aplicativo

49
00:02:38,755 --> 00:02:40,860
no ambiente virtual.

50
00:02:40,893 --> 00:02:44,338
Este espaço de trabalho
tem o Anaconda instalado,

51
00:02:44,371 --> 00:02:48,730
que é um conjunto de ferramentas
do Python para a ciência de dados.

52
00:02:48,763 --> 00:02:50,650
Há um problema

53
00:02:50,683 --> 00:02:56,442
com a instalação do Anaconda
no Python e nos ambientes virtuais.

54
00:02:56,475 --> 00:02:58,504
Antes de qualquer coisa,

55
00:02:58,537 --> 00:03:03,052
precisamos executar
conda update python.

56
00:03:03,085 --> 00:03:04,980
Isso levará um tempo.

57
00:03:05,013 --> 00:03:09,483
Se não tiver o Conda instalado
no computador,

58
00:03:09,516 --> 00:03:11,413
não precisará fazer isso.

59
00:03:12,085 --> 00:03:15,397
Quando aparecer "Proceed"
digite y,

60
00:03:16,004 --> 00:03:19,732
dê enter e aguarde
a conclusão da instalação.

61
00:03:20,565 --> 00:03:23,010
Agora que o Python
está atualizado,

62
00:03:23,043 --> 00:03:27,218
podemos realmente criar
um ambiente virtual e iniciá-lo.

63
00:03:27,251 --> 00:03:29,554
Para criar
um ambiente virtual,

64
00:03:29,587 --> 00:03:32,347
vá até o terminal
e digite o seguinte:

65
00:03:32,380 --> 00:03:36,914
python3 -m venv

66
00:03:36,947 --> 00:03:41,018
e o nome do ambiente virtual,
que pode ser o que quiser.

67
00:03:41,051 --> 00:03:45,564
Vou chamá-lo
de "worldbankenv".

68
00:03:45,597 --> 00:03:49,780
Vemos que há uma nova pasta
à esquerda chamada "worldbankenv",

69
00:03:49,813 --> 00:03:53,172
e dentro dela, na verdade,
há uma instalação do Python

70
00:03:53,205 --> 00:03:57,145
que está separada da instalação
do Python no computador.

71
00:03:57,178 --> 00:04:01,139
O próximo passo será ativar
o ambiente virtual.

72
00:04:01,172 --> 00:04:03,211
Digitarei source

73
00:04:03,244 --> 00:04:08,876
worldbankenv/bin/activate.

74
00:04:08,909 --> 00:04:12,549
Podemos ver que o ambiente
virtual está ativado,

75
00:04:12,582 --> 00:04:14,132
porque aqui, no terminal,

76
00:04:14,165 --> 00:04:16,908
aparece o nome
do ambiente virtual.

77
00:04:16,941 --> 00:04:19,709
O próximo passo será
usar a instalação pip

78
00:04:19,742 --> 00:04:22,911
nas bibliotecas que precisamos
para o aplicativo Flask.

79
00:04:22,944 --> 00:04:26,528
A razão pela qual criamos
este ambiente virtual

80
00:04:26,561 --> 00:04:28,846
é porque todas as bibliotecas

81
00:04:28,879 --> 00:04:31,215
serão instaladas
no ambiente virtual

82
00:04:31,248 --> 00:04:34,368
em vez de - conforme a instalação
normal do Python -

83
00:04:34,401 --> 00:04:36,430
no seu computador local.

84
00:04:36,463 --> 00:04:38,847
Usamos pip install

85
00:04:38,880 --> 00:04:42,526
e listamos
as bibliotecas necessárias,

86
00:04:42,559 --> 00:04:46,623
que, neste caso,
serão Flask, Pandas e Plotly.

87
00:04:46,656 --> 00:04:52,066
Adicionarei outra biblioteca
chamada "gunicorn",

88
00:04:52,099 --> 00:04:57,568
que é necessária para implantar
o aplicativo web.

89
00:04:57,601 --> 00:04:59,231
Agora, do terminal,

90
00:04:59,264 --> 00:05:02,750
vamos para a pasta web_app.

91
00:05:02,783 --> 00:05:06,767
O próximo passo será instalar
um conjunto de ferramentas

92
00:05:06,800 --> 00:05:08,336
fornecido pelo Heroku,

93
00:05:08,369 --> 00:05:11,892
para podermos escrever comandos
e carregar o aplicativo

94
00:05:11,925 --> 00:05:14,477
diretamente do terminal
para o Heroku.

95
00:05:14,510 --> 00:05:18,663
Na verdade, há uma página web
que informa como instalar isso

96
00:05:18,696 --> 00:05:20,156
em diferentes sistemas.

97
00:05:20,189 --> 00:05:22,452
Acho que é isto aqui.

98
00:05:22,485 --> 00:05:24,940
Também colocarei um link
abaixo do vídeo.

99
00:05:24,973 --> 00:05:26,692
Nesta página,

100
00:05:26,725 --> 00:05:30,924
diz que, se for um sistema
Linux ou Ubuntu -

101
00:05:30,957 --> 00:05:32,101
que é o nosso caso -,

102
00:05:32,134 --> 00:05:34,668
então deveremos fazer
o seguinte:

103
00:05:34,701 --> 00:05:36,877
entramos no terminal

104
00:05:36,910 --> 00:05:42,277
e executamos
o seguinte comando aqui em cima.

105
00:05:42,958 --> 00:05:44,901
Agora está instalando.

106
00:05:44,934 --> 00:05:47,373
Apenas para verificar
se tudo foi instalado,

107
00:05:47,406 --> 00:05:52,196
digitarei heroku --version.

108
00:05:52,229 --> 00:05:54,908
Parece que instalou
e está tudo bem.

109
00:05:54,941 --> 00:05:59,332
A próxima coisa será se inscrever
para uma conta Heroku.

110
00:05:59,365 --> 00:06:02,283
É como se inscrever
em qualquer outro serviço web.

111
00:06:02,316 --> 00:06:04,522
No site Heroku,

112
00:06:04,555 --> 00:06:08,508
clique em "Sign up",

113
00:06:08,541 --> 00:06:11,699
no canto superior direito.

114
00:06:11,732 --> 00:06:14,605
Basta preencher
com suas informações.

115
00:06:14,638 --> 00:06:18,444
Depois do nome de usuário -
que é seu endereço de e-mail -

116
00:06:18,477 --> 00:06:20,036
e da senha,

117
00:06:20,069 --> 00:06:23,837
você precisará fazer o login
a partir da linha de comando.

118
00:06:23,870 --> 00:06:26,516
Agora que temos
as ferramentas Heroku instaladas,

119
00:06:26,549 --> 00:06:29,907
podemos digitar heroku login,

120
00:06:29,940 --> 00:06:32,256
e ele pedirá
para digitar o e-mail

121
00:06:32,289 --> 00:06:35,377
e, em seguida, a senha.

122
00:06:35,410 --> 00:06:39,746
Vou esconder isso da tela
enquanto preencho as informações.

123
00:06:40,370 --> 00:06:43,472
Já estou
na minha conta Heroku.

124
00:06:43,505 --> 00:06:47,745
Basta colocar o e-mail
e a senha

125
00:06:47,778 --> 00:06:49,481
da conta Heroku.

126
00:06:50,187 --> 00:06:55,015
Existem algumas tarefas
antes de conseguirmos carregar tudo

127
00:06:55,048 --> 00:06:58,784
para um servidor web Heroku.

128
00:06:58,817 --> 00:07:01,786
Primeiro,
abrimos o worldbank.py

129
00:07:01,819 --> 00:07:07,520
e removemos essa linha app.run,
porque não precisamos mais dela.

130
00:07:07,553 --> 00:07:10,217
Também precisamos criar
um Procfile,

131
00:07:10,250 --> 00:07:15,722
que é um arquivo que diz ao Heroku
o que fazer ao iniciar o aplicativo.

132
00:07:15,755 --> 00:07:18,427
Podemos fazer isso aqui,
criando um novo arquivo,

133
00:07:18,461 --> 00:07:20,672
ou pelo terminal.

134
00:07:20,705 --> 00:07:24,312
Basta digitar touch Procfile

135
00:07:24,345 --> 00:07:28,640
para vermos que o Procfile
apareceu do lado esquerdo.

136
00:07:28,673 --> 00:07:30,944
Darei um clique duplo
para abri-lo

137
00:07:30,977 --> 00:07:32,571
e digitarei

138
00:07:32,604 --> 00:07:37,499
web gunicorn worldbank:app.

139
00:07:37,532 --> 00:07:40,876
Isso pede que,
ao iniciar o aplicativo web,

140
00:07:41,645 --> 00:07:43,827
ele chame
a biblioteca gunicorn

141
00:07:43,860 --> 00:07:48,203
e execute
o aplicativo worldbank,

142
00:07:48,236 --> 00:07:52,507
que tem essa variável app,
que já vimos antes.

143
00:07:52,540 --> 00:07:54,105
A próxima coisa a ser feita

144
00:07:54,138 --> 00:07:58,075
é especificar as bibliotecas Python
que serão necessárias.

145
00:07:58,108 --> 00:08:03,264
Se digitarmos pip freeze
no terminal,

146
00:08:03,297 --> 00:08:05,191
ele fornecerá uma lista

147
00:08:05,224 --> 00:08:08,640
das bibliotecas Python
atualmente instaladas.

148
00:08:08,673 --> 00:08:11,422
Precisaremos colocar
essas informações

149
00:08:11,455 --> 00:08:14,455
em um arquivo
chamado "requirements.txt".

150
00:08:14,488 --> 00:08:18,904
Vou digitar pip freeze >

151
00:08:19,575 --> 00:08:22,111
requirements.txt.

152
00:08:22,144 --> 00:08:24,151
Isso colocará as informações

153
00:08:24,184 --> 00:08:27,031
em um arquivo chamado
"requirements.txt".

154
00:08:27,064 --> 00:08:30,597
É importante que esse arquivo
se chame "requirements.txt",

155
00:08:30,630 --> 00:08:33,127
porque o Heroku
vai procurar por ele.

156
00:08:33,160 --> 00:08:36,983
Isso lista
as bibliotecas Python

157
00:08:37,016 --> 00:08:41,120
das quais
este aplicativo depende.

158
00:08:41,153 --> 00:08:45,966
O próximo passo
será iniciar um repositório Git,

159
00:08:45,999 --> 00:08:47,631
então, git init

160
00:08:47,664 --> 00:08:53,399
e git add.
Coloquei o ponto aqui,

161
00:08:53,432 --> 00:08:56,584
e digitarei git commit -m

162
00:08:56,617 --> 00:09:00,888
e "first commit"
como mensagem.

163
00:09:00,921 --> 00:09:03,481
Aqui diz: "Por favor,
me diga quem você é".

164
00:09:03,514 --> 00:09:06,053
Precisamos de um endereço
de e-mail e de um nome.

165
00:09:06,086 --> 00:09:10,325
Podemos colocar qualquer coisa
que quisermos.

166
00:09:11,251 --> 00:09:16,072
Vou colocar
something@example.com

167
00:09:16,105 --> 00:09:20,169
e git config user.name.

168
00:09:20,202 --> 00:09:23,551
Podemos colocar coisas reais aqui.
Meu nome é Andrew...

169
00:09:23,584 --> 00:09:27,913
Vamos tentar outro commit,
git commit -m

170
00:09:27,946 --> 00:09:29,488
'first commit'.

171
00:09:29,521 --> 00:09:31,544
Fizemos o primeiro commit.

172
00:09:31,577 --> 00:09:33,288
O último passo

173
00:09:33,321 --> 00:09:37,575
será criar um aplicativo web
no Heroku.

174
00:09:37,608 --> 00:09:39,345
Para isso, digitamos

175
00:09:39,378 --> 00:09:41,871
heroku create

176
00:09:41,904 --> 00:09:46,072
e o nome do aplicativo da web,
que precisa ser único,

177
00:09:46,105 --> 00:09:49,536
só poderá haver um com esse nome
no Heroku.

178
00:09:49,569 --> 00:09:51,322
Se o primeiro não funcionar,

179
00:09:51,355 --> 00:09:53,704
continue tentando
até encontrar alguma coisa.

180
00:09:53,737 --> 00:09:58,467
Chamarei isso
de "dsnd-udacity-webapp".

181
00:09:58,500 --> 00:10:00,131
Dê enter...

182
00:10:00,164 --> 00:10:03,882
Obtenho o link no qual
vejo o aplicativo web

183
00:10:03,915 --> 00:10:07,411
e o repositório Git
criado no Heroku,

184
00:10:07,444 --> 00:10:11,716
no qual os arquivos serão
carregados e armazenados.

185
00:10:11,749 --> 00:10:13,627
Apenas para verificar,

186
00:10:13,660 --> 00:10:16,644
digitarei git remote -v.

187
00:10:16,677 --> 00:10:19,947
Isso mostra que o Heroku
automaticamente

188
00:10:19,980 --> 00:10:24,396
configurou os repositórios Git
como repositórios remotos.

189
00:10:24,429 --> 00:10:29,779
O último passo será digitar
git push heroku master,

190
00:10:29,812 --> 00:10:34,196
e isso empurrará o aplicativo
para o repositório Git Heroku.

191
00:10:34,893 --> 00:10:39,636
Aqui diz que tudo foi implantado
neste endereço da internet,

192
00:10:39,669 --> 00:10:41,220
então vou clicar aqui...

193
00:10:41,253 --> 00:10:44,323
Parece que o aplicativo web
foi implantado.

194
00:10:44,356 --> 00:10:47,284
Agora está oficialmente
neste endereço web:

195
00:10:47,317 --> 00:10:51,947
dsnd-udacity-webapp.
herokuapp.com.

196
00:10:51,980 --> 00:10:57,033
Essa é uma forma de implantar
um aplicativo do Flask na internet.

